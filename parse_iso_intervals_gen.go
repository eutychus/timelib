// Code generated by re2c 3.1 on Sat Oct  4 14:15:45 2025, DO NOT EDIT.
//line "parse_iso_intervals_go.re":1
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2019 Derick Rethans
 * Copyright (c) 2025 Go port
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package timelib

import (
	"unsafe"
)

// IsoIntervalScanner holds the state for parsing ISO 8601 intervals
type IsoIntervalScanner struct {
	str    []byte
	lim    *byte
	ptr    *byte
	cur    *byte
	tok    *byte
	pos    *byte
	line   int
	len    int
	errors *ErrorContainer

	Begin        *Time
	End          *Time
	Period       *RelTime
	Recurrences  int

	HavePeriod      bool
	HaveRecurrences bool
	HaveDate        bool
	HaveBeginDate   bool
	HaveEndDate     bool
}

// Helper function to add error to scanner
func addIsoError(s *IsoIntervalScanner, errorMsg string) {
	var position int
	var character byte

	if s.tok != nil {
		position = int(uintptr(unsafe.Pointer(s.tok)) - uintptr(unsafe.Pointer(&s.str[0])))
		character = *s.tok
	}

	s.errors.ErrorCount++
	s.errors.ErrorMessages = append(s.errors.ErrorMessages, ErrorMessage{
		Position:  position,
		Character: character,
		Message:   errorMsg,
	})
}

// Helper function to extract string from scanner
func timelibIsoString(s *IsoIntervalScanner) string {
	length := int(uintptr(unsafe.Pointer(s.cur)) - uintptr(unsafe.Pointer(s.tok)))
	if length <= 0 {
		return ""
	}

	bytes := make([]byte, length)
	for i := 0; i < length; i++ {
		ptr := (*byte)(unsafe.Pointer(uintptr(unsafe.Pointer(s.tok)) + uintptr(i)))
		bytes[i] = *ptr
	}

	return string(bytes)
}

// Helper function to get unsigned number from string pointer
func timelibGetUnsignedNr(ptr *string, maxLength int) int64 {
	if ptr == nil || *ptr == "" {
		return TIMELIB_UNSET
	}

	str := *ptr
	length := 0

	for length < len(str) && length < maxLength && str[length] >= '0' && str[length] <= '9' {
		length++
	}

	if length == 0 {
		return TIMELIB_UNSET
	}

	result := int64(0)
	for i := 0; i < length; i++ {
		result = result*10 + int64(str[i]-'0')
	}

	*ptr = str[length:]
	return result
}

// scan is the main scanning function for ISO intervals
func scanIsoInterval(s *IsoIntervalScanner) int {
	var str string
	var ptr string

	// re2go generic API functions use s.cur directly
	YYPEEK := func() byte {
		// Check if we're at or past the limit
		if s.cur != nil && uintptr(unsafe.Pointer(s.cur)) >= uintptr(unsafe.Pointer(s.lim)) {
			return 0 // Return null byte when at/past limit
		}
		if s.cur != nil {
			return *s.cur
		}
		return 0
	}
	YYSKIP := func() {
		if s.cur != nil && uintptr(unsafe.Pointer(s.cur)) < uintptr(unsafe.Pointer(s.lim)) {
			s.cur = (*byte)(unsafe.Pointer(uintptr(unsafe.Pointer(s.cur)) + 1))
		}
	}
	YYBACKUP := func() {
		s.ptr = s.cur
	}
	YYRESTORE := func() {
		s.cur = s.ptr
	}
	YYLESSTHAN := func(n int) bool {
		return uintptr(unsafe.Pointer(s.lim))-uintptr(unsafe.Pointer(s.cur)) < uintptr(n)
	}
	_ = YYRESTORE
	_ = YYLESSTHAN

std:
	s.tok = s.cur
	s.len = 0

//line "parse_iso_intervals_gen.go":156
{
	var yych byte
	yyaccept := 0
	yybm := []byte{
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	}
	yych = YYPEEK()
	if (yych <= ',') {
		if (yych <= '\n') {
			if (yych <= 0x00) {
				goto yy1
			}
			if (yych <= 0x08) {
				goto yy2
			}
			if (yych <= '\t') {
				goto yy4
			}
			goto yy5
		} else {
			if (yych == ' ') {
				goto yy4
			}
			if (yych <= '+') {
				goto yy2
			}
			goto yy4
		}
	} else {
		if (yych <= 'O') {
			if (yych <= '-') {
				goto yy2
			}
			if (yych <= '/') {
				goto yy4
			}
			if (yych <= '9') {
				goto yy6
			}
			goto yy2
		} else {
			if (yych <= 'P') {
				goto yy7
			}
			if (yych == 'R') {
				goto yy9
			}
			goto yy2
		}
	}
yy1:
	YYSKIP()
//line "parse_iso_intervals_go.re":315
	{
	return EOI
}
//line "parse_iso_intervals_gen.go":244
yy2:
	YYSKIP()
yy3:
//line "parse_iso_intervals_go.re":327
	{
	addIsoError(s, "Unexpected character")
	goto std
}
//line "parse_iso_intervals_gen.go":253
yy4:
	YYSKIP()
//line "parse_iso_intervals_go.re":310
	{
	goto std
}
//line "parse_iso_intervals_gen.go":260
yy5:
	YYSKIP()
//line "parse_iso_intervals_go.re":320
	{
	s.pos = s.cur
	s.line++
	goto std
}
//line "parse_iso_intervals_gen.go":269
yy6:
	yyaccept = 0
	YYSKIP()
	YYBACKUP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy3
	}
	if (yych <= '9') {
		goto yy10
	}
	goto yy3
yy7:
	yyaccept = 1
	YYSKIP()
	YYBACKUP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy8
	}
	if (yych <= '9') {
		goto yy12
	}
	if (yych == 'T') {
		goto yy13
	}
yy8:
//line "parse_iso_intervals_go.re":240
	{
	var nr int64
	inTime := false

	str = timelibIsoString(s)
	ptr = str
	ptr = ptr[1:] // skip 'P'

	for len(ptr) > 0 && s.errors.ErrorCount == 0 {
		if ptr[0] == 'T' {
			inTime = true
			ptr = ptr[1:]
		}
		if len(ptr) == 0 {
			addIsoError(s, "Missing expected time part")
			break
		}

		nr = timelibGetUnsignedNr(&ptr, 12)
		if len(ptr) == 0 {
			break
		}

		switch ptr[0] {
		case 'Y':
			s.Period.Y = nr
		case 'W':
			s.Period.D += nr * 7
		case 'D':
			s.Period.D += nr
		case 'H':
			s.Period.H = nr
		case 'S':
			s.Period.S = nr
		case 'M':
			if inTime {
				s.Period.I = nr
			} else {
				s.Period.M = nr
			}
		default:
			addIsoError(s, "Undefined period specifier")
		}
		ptr = ptr[1:]
	}
	s.HavePeriod = true
	return TIMELIB_PERIOD
}
//line "parse_iso_intervals_gen.go":346
yy9:
	YYSKIP()
	yych = YYPEEK()
	if (yybm[0+yych] & 128 != 0) {
		goto yy14
	}
	goto yy3
yy10:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy15
	}
yy11:
	YYRESTORE()
	if (yyaccept == 0) {
		goto yy3
	} else {
		goto yy8
	}
yy12:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= 'L') {
		if (yych <= '9') {
			if (yych <= '/') {
				goto yy11
			}
			goto yy16
		} else {
			if (yych == 'D') {
				goto yy17
			}
			goto yy11
		}
	} else {
		if (yych <= 'W') {
			if (yych <= 'M') {
				goto yy18
			}
			if (yych <= 'V') {
				goto yy11
			}
			goto yy19
		} else {
			if (yych == 'Y') {
				goto yy20
			}
			goto yy11
		}
	}
yy13:
	yyaccept = 1
	YYSKIP()
	YYBACKUP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy8
	}
	if (yych <= '9') {
		goto yy21
	}
	goto yy8
yy14:
	YYSKIP()
	yych = YYPEEK()
	if (yybm[0+yych] & 128 != 0) {
		goto yy14
	}
//line "parse_iso_intervals_go.re":186
	{
	str = timelibIsoString(s)
	ptr = str
	ptr = ptr[1:] // skip 'R'
	s.Recurrences = int(timelibGetUnsignedNr(&ptr, 9))
	s.HaveRecurrences = true
	return TIMELIB_PERIOD
}
//line "parse_iso_intervals_gen.go":428
yy15:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy22
	}
	goto yy11
yy16:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= 'L') {
		if (yych <= '9') {
			if (yych <= '/') {
				goto yy11
			}
			goto yy23
		} else {
			if (yych != 'D') {
				goto yy11
			}
		}
	} else {
		if (yych <= 'W') {
			if (yych <= 'M') {
				goto yy18
			}
			if (yych <= 'V') {
				goto yy11
			}
			goto yy19
		} else {
			if (yych == 'Y') {
				goto yy20
			}
			goto yy11
		}
	}
yy17:
	YYSKIP()
	yych = YYPEEK()
	if (yych == 'T') {
		goto yy13
	}
	goto yy8
yy18:
	yyaccept = 1
	YYSKIP()
	YYBACKUP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy8
	}
	if (yych <= '9') {
		goto yy24
	}
	if (yych == 'T') {
		goto yy13
	}
	goto yy8
yy19:
	yyaccept = 1
	YYSKIP()
	YYBACKUP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy8
	}
	if (yych <= '9') {
		goto yy25
	}
	if (yych == 'T') {
		goto yy13
	}
	goto yy8
yy20:
	yyaccept = 1
	YYSKIP()
	YYBACKUP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy8
	}
	if (yych <= '9') {
		goto yy26
	}
	if (yych == 'T') {
		goto yy13
	}
	goto yy8
yy21:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= 'H') {
		if (yych <= '/') {
			goto yy11
		}
		if (yych <= '9') {
			goto yy21
		}
		if (yych <= 'G') {
			goto yy11
		}
		goto yy27
	} else {
		if (yych <= 'M') {
			if (yych <= 'L') {
				goto yy11
			}
			goto yy28
		} else {
			if (yych == 'S') {
				goto yy29
			}
			goto yy11
		}
	}
yy22:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		if (yych == '-') {
			goto yy30
		}
		goto yy11
	} else {
		if (yych <= '0') {
			goto yy31
		}
		if (yych <= '1') {
			goto yy32
		}
		goto yy11
	}
yy23:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= 'L') {
		if (yych <= '9') {
			if (yych <= '/') {
				goto yy11
			}
			goto yy33
		} else {
			if (yych == 'D') {
				goto yy17
			}
			goto yy11
		}
	} else {
		if (yych <= 'W') {
			if (yych <= 'M') {
				goto yy18
			}
			if (yych <= 'V') {
				goto yy11
			}
			goto yy19
		} else {
			if (yych == 'Y') {
				goto yy20
			}
			goto yy11
		}
	}
yy24:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= 'C') {
		if (yych <= '/') {
			goto yy11
		}
		if (yych <= '9') {
			goto yy24
		}
		goto yy11
	} else {
		if (yych <= 'D') {
			goto yy17
		}
		if (yych == 'W') {
			goto yy19
		}
		goto yy11
	}
yy25:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy25
	}
	if (yych == 'D') {
		goto yy17
	}
	goto yy11
yy26:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= 'D') {
		if (yych <= '/') {
			goto yy11
		}
		if (yych <= '9') {
			goto yy26
		}
		if (yych <= 'C') {
			goto yy11
		}
		goto yy17
	} else {
		if (yych <= 'M') {
			if (yych <= 'L') {
				goto yy11
			}
			goto yy18
		} else {
			if (yych == 'W') {
				goto yy19
			}
			goto yy11
		}
	}
yy27:
	yyaccept = 1
	YYSKIP()
	YYBACKUP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy8
	}
	if (yych <= '9') {
		goto yy34
	}
	goto yy8
yy28:
	yyaccept = 1
	YYSKIP()
	YYBACKUP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy8
	}
	if (yych <= '9') {
		goto yy35
	}
	goto yy8
yy29:
	YYSKIP()
	goto yy8
yy30:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '0') {
		goto yy36
	}
	if (yych <= '1') {
		goto yy37
	}
	goto yy11
yy31:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '0') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy38
	}
	goto yy11
yy32:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '2') {
		goto yy38
	}
	goto yy11
yy33:
	YYSKIP()
	yych = YYPEEK()
	if (yych == '-') {
		goto yy39
	}
	goto yy41
yy34:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= 'L') {
		if (yych <= '/') {
			goto yy11
		}
		if (yych <= '9') {
			goto yy34
		}
		goto yy11
	} else {
		if (yych <= 'M') {
			goto yy28
		}
		if (yych == 'S') {
			goto yy29
		}
		goto yy11
	}
yy35:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy35
	}
	if (yych == 'S') {
		goto yy29
	}
	goto yy11
yy36:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '0') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy42
	}
	goto yy11
yy37:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '2') {
		goto yy42
	}
	goto yy11
yy38:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '0') {
		goto yy43
	}
	if (yych <= '2') {
		goto yy44
	}
	if (yych <= '3') {
		goto yy45
	}
	goto yy11
yy39:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '0') {
		goto yy46
	}
	if (yych <= '1') {
		goto yy47
	}
	goto yy11
yy40:
	YYSKIP()
	yych = YYPEEK()
yy41:
	if (yych <= 'L') {
		if (yych <= '9') {
			if (yych <= '/') {
				goto yy11
			}
			goto yy40
		} else {
			if (yych == 'D') {
				goto yy17
			}
			goto yy11
		}
	} else {
		if (yych <= 'W') {
			if (yych <= 'M') {
				goto yy18
			}
			if (yych <= 'V') {
				goto yy11
			}
			goto yy19
		} else {
			if (yych == 'Y') {
				goto yy20
			}
			goto yy11
		}
	}
yy42:
	YYSKIP()
	yych = YYPEEK()
	if (yych == '-') {
		goto yy48
	}
	goto yy11
yy43:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '0') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy49
	}
	goto yy11
yy44:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy49
	}
	goto yy11
yy45:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '1') {
		goto yy49
	}
	goto yy11
yy46:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy50
	}
	goto yy11
yy47:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '2') {
		goto yy50
	}
	goto yy11
yy48:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '0') {
		goto yy51
	}
	if (yych <= '2') {
		goto yy52
	}
	if (yych <= '3') {
		goto yy53
	}
	goto yy11
yy49:
	YYSKIP()
	yych = YYPEEK()
	if (yych == 'T') {
		goto yy54
	}
	goto yy11
yy50:
	YYSKIP()
	yych = YYPEEK()
	if (yych == '-') {
		goto yy55
	}
	goto yy11
yy51:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '0') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy56
	}
	goto yy11
yy52:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy56
	}
	goto yy11
yy53:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '1') {
		goto yy56
	}
	goto yy11
yy54:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '1') {
		goto yy57
	}
	if (yych <= '2') {
		goto yy58
	}
	goto yy11
yy55:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '2') {
		goto yy59
	}
	if (yych <= '3') {
		goto yy60
	}
	goto yy11
yy56:
	YYSKIP()
	yych = YYPEEK()
	if (yych == 'T') {
		goto yy61
	}
	goto yy11
yy57:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy62
	}
	goto yy11
yy58:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '4') {
		goto yy62
	}
	goto yy11
yy59:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy63
	}
	goto yy11
yy60:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '1') {
		goto yy63
	}
	goto yy11
yy61:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '1') {
		goto yy64
	}
	if (yych <= '2') {
		goto yy65
	}
	goto yy11
yy62:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '5') {
		goto yy66
	}
	goto yy11
yy63:
	YYSKIP()
	yych = YYPEEK()
	if (yych == 'T') {
		goto yy67
	}
	goto yy11
yy64:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy68
	}
	goto yy11
yy65:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '4') {
		goto yy68
	}
	goto yy11
yy66:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy69
	}
	goto yy11
yy67:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '1') {
		goto yy70
	}
	if (yych <= '2') {
		goto yy71
	}
	goto yy11
yy68:
	YYSKIP()
	yych = YYPEEK()
	if (yych == ':') {
		goto yy72
	}
	goto yy11
yy69:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '5') {
		goto yy73
	}
	goto yy11
yy70:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy74
	}
	goto yy11
yy71:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '4') {
		goto yy74
	}
	goto yy11
yy72:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '5') {
		goto yy75
	}
	goto yy11
yy73:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy76
	}
	goto yy11
yy74:
	YYSKIP()
	yych = YYPEEK()
	if (yych == ':') {
		goto yy77
	}
	goto yy11
yy75:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '9') {
		goto yy78
	}
	goto yy11
yy76:
	YYSKIP()
	yych = YYPEEK()
	if (yych == 'Z') {
		goto yy79
	}
	goto yy11
yy77:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych <= '5') {
		goto yy80
	}
	goto yy11
yy78:
	YYSKIP()
	yych = YYPEEK()
	if (yych == ':') {
		goto yy69
	}
	goto yy11
yy79:
	YYSKIP()
//line "parse_iso_intervals_go.re":196
	{
	var current *Time

	if s.HaveDate || s.HavePeriod {
		current = s.End
		s.HaveEndDate = true
	} else {
		current = s.Begin
		s.HaveBeginDate = true
	}

	str = timelibIsoString(s)
	ptr = str
	current.Y = timelibGetUnsignedNr(&ptr, 4)
	// Skip '-' if present (extended format)
	if len(ptr) > 0 && ptr[0] == '-' {
		ptr = ptr[1:]
	}
	current.M = timelibGetUnsignedNr(&ptr, 2)
	// Skip '-' if present (extended format)
	if len(ptr) > 0 && ptr[0] == '-' {
		ptr = ptr[1:]
	}
	current.D = timelibGetUnsignedNr(&ptr, 2)
	// Skip 'T'
	if len(ptr) > 0 && ptr[0] == 'T' {
		ptr = ptr[1:]
	}
	current.H = timelibGetUnsignedNr(&ptr, 2)
	// Skip ':' if present (extended format)
	if len(ptr) > 0 && ptr[0] == ':' {
		ptr = ptr[1:]
	}
	current.I = timelibGetUnsignedNr(&ptr, 2)
	// Skip ':' if present (extended format)
	if len(ptr) > 0 && ptr[0] == ':' {
		ptr = ptr[1:]
	}
	current.S = timelibGetUnsignedNr(&ptr, 2)
	s.HaveDate = true
	return TIMELIB_ISO_DATE_INTRVL
}
//line "parse_iso_intervals_gen.go":1243
yy80:
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych >= ':') {
		goto yy11
	}
	YYSKIP()
	yych = YYPEEK()
	if (yych != ':') {
		goto yy11
	}
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych >= '6') {
		goto yy11
	}
	YYSKIP()
	yych = YYPEEK()
	if (yych <= '/') {
		goto yy11
	}
	if (yych >= ':') {
		goto yy11
	}
	YYSKIP()
//line "parse_iso_intervals_go.re":290
	{
	str = timelibIsoString(s)
	ptr = str
	ptr = ptr[1:] // skip 'P'
	s.Period.Y = timelibGetUnsignedNr(&ptr, 4)
	ptr = ptr[1:] // skip '-'
	s.Period.M = timelibGetUnsignedNr(&ptr, 2)
	ptr = ptr[1:] // skip '-'
	s.Period.D = timelibGetUnsignedNr(&ptr, 2)
	ptr = ptr[1:] // skip 'T'
	s.Period.H = timelibGetUnsignedNr(&ptr, 2)
	ptr = ptr[1:] // skip ':'
	s.Period.I = timelibGetUnsignedNr(&ptr, 2)
	ptr = ptr[1:] // skip ':'
	s.Period.S = timelibGetUnsignedNr(&ptr, 2)
	s.HavePeriod = true
	return TIMELIB_PERIOD
}
//line "parse_iso_intervals_gen.go":1294
}
//line "parse_iso_intervals_go.re":331

}

//line "parse_iso_intervals_gen.go":1300
var YYMAXFILL_ISO int = 20
//line "parse_iso_intervals_go.re":334

